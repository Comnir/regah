import java.nio.file.Paths

group 'com.jefferson'
version '1.0-SNAPSHOT'

apply plugin: 'application'

sourceCompatibility = 1.9
ext.junitJupiterVersion  = '5.0.0'
mainClassName = 'com.jefferson.regah.Application'

repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

configurations {
    nativeTorrentLib
}

def JLIBTORRENT_VERSION='1.2.0.12'

dependencies {
    compile 'org.apache.logging.log4j:log4j-api:2.9.1'
    compile 'org.apache.logging.log4j:log4j-core:2.9.1'

    compile 'com.google.code.gson:gson:2.8.2'

    compile 'com.frostwire:jlibtorrent:' + JLIBTORRENT_VERSION
    nativeTorrentLib 'com.frostwire:jlibtorrent-linux:' + JLIBTORRENT_VERSION
    nativeTorrentLib 'com.frostwire:jlibtorrent-windows:' + JLIBTORRENT_VERSION
    nativeTorrentLib 'com.frostwire:jlibtorrent-macosx:' + JLIBTORRENT_VERSION

    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
}


task copyLibs(type: Copy)  {
    from configurations.compile
    into('libs')
}
task copyNativeLibs(type: Copy) {
    configurations.nativeTorrentLib
        .filter {
            !it.name.equals('jlibtorrent-' + JLIBTORRENT_VERSION + '.jar')
        }
        .forEach {
            println it.name
            from zipTree(it)
            into 'libs/native'
        }
}

run {
    // set java.library.path before running, because it's read once by the JVM
    final String javaLibPathProperty = "java.library.path"
    final String newPath = System.getProperty(javaLibPathProperty) + File.pathSeparator + file(Paths.get("libs/native/lib/x86_64")).absolutePath

    systemProperty "java.library.path", newPath
}
